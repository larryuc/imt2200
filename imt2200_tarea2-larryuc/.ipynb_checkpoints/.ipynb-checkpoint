{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# <img style=\"float: left; padding-right: 0.7cm; width: 3.0cm\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/84/Escudo_de_la_Pontificia_Universidad_Cat%C3%B3lica_de_Chile.svg/179px-Escudo_de_la_Pontificia_Universidad_Cat%C3%B3lica_de_Chile.svg.png\"> IMT 2200 - Introducción a Ciencia de Datos\n",
    "**Pontificia Universidad Católica de Chile**<br>\n",
    "**Semestre 2021-1**<br>\n",
    "**Profesora:** Paula Aguirre <br>\n",
    "\n",
    "----"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Tarea 2: Por Larry Uribe - 01-10-2021"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " <h1><center>Tarea 2: Extracción de Datos desde la Web </center></h1>\n",
    "    \n",
    "## Instrucciones Generales.\n",
    "\n",
    "- Fecha de entrega: 1 de octubre de 2021, 23:59.\n",
    "\n",
    "- Vía de entrega: GitHub\n",
    "\n",
    "- Esta Tarea debe desarrollarse de manera totalmente *individual*, de acuerdo a lo establecido en la sección de Integridad Académica en el programa del curso.\n",
    "\n",
    "- La Tarea debe ser desarrollada en lenguaje de programación Python y en formato Jupyter Notebook.\n",
    "\n",
    "- El desarrollo del Notebook debe ser claro y ordenado, incluyendo anotaciones (markdown) y comentarios que permitan seguir fácilmente el código y los pasos implementados, y siguiendo buenas prácticas de programación. La presentación y claridad del notebook y código forman parte de la evaluación de la tarea.\n",
    "\n",
    "- Se sugiere hacer consultas y comentarios sobre la Tarea a traves del Foro del curso en Canvas.\n",
    "\n",
    "\n",
    "## Objetivos de Aprendizaje\n",
    "\n",
    "Esta Tarea tiene como objetivo poner en práctica los contenidos del curso vistos hasta ahora, en especial:\n",
    "- Manejo de librerías `pandas`,`matplotlib`, `requests` y `BeautifulSoup`.\n",
    "- Manejo de datos estructurado y semi-estructurados.\n",
    "- Análisis y comprensión de los elementos fundamentales de APIs y códigos HTML de páginas web. \n",
    "- Extracción de datos de la via API y scrapping sencillo.\n",
    "\n",
    "---------"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Importando librerías\n",
    "from bs4 import BeautifulSoup as bs\n",
    "import matplotlib as plt\n",
    "import geopandas as gpd\n",
    "import requests as r\n",
    "import pandas as pd\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Larry dice: \n",
    "**Se importan las librerías beautifulsoup, matplotlib, geopandas, request y pandas.**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Reporte de indicadores económicos de Chile.\n",
    "\n",
    "La API **MindicadorChile** es un servicio open source (web service) que entrega los principales indicadores económicos para Chile en formato JSON. Tanto los indicadores diarios como históricos para que desarrolladores puedan utilizarlos en sus aplicaciones o sitios web.\n",
    "\n",
    "La aplicación mapea constantemente el sitio del Banco Central de Chile manteniendo así nuestra base de datos actualizada con los últimos valores del día. Toda la documentación de la API está disponible en la dirección https://mindicador.cl/.\n",
    "\n",
    "En este ejercicio, ud. deberá utilizar la API para compilar datos para un análisis de la evolución de la economía chilena en los años 2019, 2020 y 2021, de manera de evaluar el impacto del estallido social y la pandemia.\n",
    "\n",
    "**Revise cuisadosamente la página y documentación de la API**, y luego desarrolle los siguientes problemas:\n",
    "\n",
    "**1.1.** Use la API para obtener los valores de siguientes indicadores entre el 1 de enero de 2019, y el 30 de septiembre de 2021: Dólar observado, tasa de desempleo, libra de cobre, índice de precios al consumidor.\n",
    "\n",
    "**1.2.** Para cada indicador, genere un único DataFrame que contenga las siguientes columnas: `fecha, valor`. El DataFrame debe incluir todos los reportes disponibles para dicho indicador en el rango de fechas indicado, y las fechas deben estar en orden cronológico. Para ello, le pueden ser de utilidad las siguientes funciones de `pandas`: `pd.to_datetime()`,`DataFrame.sort_values()`. \n",
    "\n",
    "**1.3.** Genere una figura con cuatro paneles o subplots. En cada uno de ellos, grafique la serie de tiempo de los indicadores analizados, siguiendo las reglas básicas de formato de gráficos (ejes, títulos, etiquetas, etc.). A continuación se muestra un ejemplo de la figura a generar:<br>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div>\n",
    "<img src=\"figures/fig_1.png\" width=\"500\"/>\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Respuesta 1.1**\n",
    "\n",
    "Larry dice:\n",
    "\n",
    "**Se utilizó la documentacion de la API mindicador.cl y se utilizó el contenido de la clase Mindicador y metodo InfoAPI sugerida para obtener los parametros e indicadores de datos convenientemente mediante una función Mindicador()** a continuación está el código en Python para extraer además la informacion dolar, tasa de desempleo, valor libra de cobre e IPC de años 2019, 2020 y 2021.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "#se utiliza la documentación de la API mindicador.cl \n",
    "#se crea la clase propuesta por ellos para obtener datos desde JSON con parametro año\n",
    "\n",
    "import json\n",
    "import requests\n",
    " \n",
    "def Mindicador(indicador,ano):\n",
    "    url = f'https://mindicador.cl/api/{indicador}/{ano}'\n",
    "    response = requests.get(url)\n",
    "    return response\n",
    "    \n",
    "#extrae dolar utilizando la clase anterior con el parametro \"dolar\" y año: 2019,2020 y 2021 respectivamente\n",
    "dolar_2019 = Mindicador(\"dolar\",2019)\n",
    "dolar_2020 = Mindicador(\"dolar\",2020)\n",
    "dolar_2021 = Mindicador(\"dolar\",2021)\n",
    "\n",
    "#extrae dolar utilizando la clase anterior con el parametro \"tasa_desempleo\" y año: 2019,2020 y 2021 respectivamente\n",
    "tasa_desempleo_2019 = Mindicador(\"tasa_desempleo\",2019)\n",
    "tasa_desempleo_2020 = Mindicador(\"tasa_desempleo\",2020)\n",
    "tasa_desempleo_2021 = Mindicador(\"tasa_desempleo\",2021)\n",
    "\n",
    "#extrae dolar utilizando la clase anterior con el parametro \"libra_cobre\" y año: 2019,2020 y 2021 respectivamente\n",
    "libra_cobre_2019 = Mindicador(\"libra_cobre\",2019)\n",
    "libra_cobre_2020 = Mindicador(\"libra_cobre\",2020)\n",
    "libra_cobre_2021 = Mindicador(\"libra_cobre\",2021)\n",
    "\n",
    "#extrae dolar utilizando la clase anterior con el parametro \"libra_cobre\" y año: 2019,2020 y 2021 respectivamente\n",
    "ipc_2019 = Mindicador(\"ipc\",2019)\n",
    "ipc_2020 = Mindicador(\"ipc\",2020)\n",
    "ipc_2021 = Mindicador(\"ipc\",2021)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Respuesta 1.2**\n",
    "\n",
    "Larry dice:\n",
    "\n",
    "**Utilizando las variables anteriores, se procede a convertir a DataFrame de Pandas segun lo solicitado** a continuación está el código en Python para realizar dichas operaciones requeridas."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[{'fecha': '2019-12-30T03:00:00.000Z', 'valor': 744.62},\n",
       " {'fecha': '2019-12-27T03:00:00.000Z', 'valor': 746.66},\n",
       " {'fecha': '2019-12-26T03:00:00.000Z', 'valor': 751.04},\n",
       " {'fecha': '2019-12-24T03:00:00.000Z', 'valor': 754.27},\n",
       " {'fecha': '2019-12-23T03:00:00.000Z', 'valor': 749.83},\n",
       " {'fecha': '2019-12-20T03:00:00.000Z', 'valor': 752.6},\n",
       " {'fecha': '2019-12-19T03:00:00.000Z', 'valor': 752.3},\n",
       " {'fecha': '2019-12-18T03:00:00.000Z', 'valor': 756.95},\n",
       " {'fecha': '2019-12-17T03:00:00.000Z', 'valor': 762.83},\n",
       " {'fecha': '2019-12-16T03:00:00.000Z', 'valor': 766.76},\n",
       " {'fecha': '2019-12-13T03:00:00.000Z', 'valor': 768.69},\n",
       " {'fecha': '2019-12-12T03:00:00.000Z', 'valor': 772.93},\n",
       " {'fecha': '2019-12-11T03:00:00.000Z', 'valor': 778.14},\n",
       " {'fecha': '2019-12-10T03:00:00.000Z', 'valor': 771.29},\n",
       " {'fecha': '2019-12-09T03:00:00.000Z', 'valor': 779.04},\n",
       " {'fecha': '2019-12-06T03:00:00.000Z', 'valor': 784.25},\n",
       " {'fecha': '2019-12-05T03:00:00.000Z', 'valor': 796.75},\n",
       " {'fecha': '2019-12-04T03:00:00.000Z', 'valor': 802.44},\n",
       " {'fecha': '2019-12-03T03:00:00.000Z', 'valor': 804.29},\n",
       " {'fecha': '2019-12-02T03:00:00.000Z', 'valor': 812.13},\n",
       " {'fecha': '2019-11-29T03:00:00.000Z', 'valor': 828.25},\n",
       " {'fecha': '2019-11-28T03:00:00.000Z', 'valor': 806.3},\n",
       " {'fecha': '2019-11-27T03:00:00.000Z', 'valor': 793.49},\n",
       " {'fecha': '2019-11-26T03:00:00.000Z', 'valor': 791.16},\n",
       " {'fecha': '2019-11-25T03:00:00.000Z', 'valor': 795.94},\n",
       " {'fecha': '2019-11-22T03:00:00.000Z', 'valor': 795.14},\n",
       " {'fecha': '2019-11-21T03:00:00.000Z', 'valor': 797.17},\n",
       " {'fecha': '2019-11-20T03:00:00.000Z', 'valor': 782.71},\n",
       " {'fecha': '2019-11-19T03:00:00.000Z', 'valor': 773.81},\n",
       " {'fecha': '2019-11-18T03:00:00.000Z', 'valor': 782.82},\n",
       " {'fecha': '2019-11-15T03:00:00.000Z', 'valor': 801.83},\n",
       " {'fecha': '2019-11-14T03:00:00.000Z', 'valor': 794.51},\n",
       " {'fecha': '2019-11-13T03:00:00.000Z', 'valor': 783.72},\n",
       " {'fecha': '2019-11-12T03:00:00.000Z', 'valor': 756.08},\n",
       " {'fecha': '2019-11-11T03:00:00.000Z', 'valor': 746.23},\n",
       " {'fecha': '2019-11-08T03:00:00.000Z', 'valor': 740.23},\n",
       " {'fecha': '2019-11-07T03:00:00.000Z', 'valor': 743.65},\n",
       " {'fecha': '2019-11-06T03:00:00.000Z', 'valor': 745.85},\n",
       " {'fecha': '2019-11-05T03:00:00.000Z', 'valor': 736.66},\n",
       " {'fecha': '2019-11-04T03:00:00.000Z', 'valor': 735.05},\n",
       " {'fecha': '2019-10-30T03:00:00.000Z', 'valor': 726.34},\n",
       " {'fecha': '2019-10-29T03:00:00.000Z', 'valor': 724.37},\n",
       " {'fecha': '2019-10-28T03:00:00.000Z', 'valor': 725.87},\n",
       " {'fecha': '2019-10-25T03:00:00.000Z', 'valor': 723.43},\n",
       " {'fecha': '2019-10-24T03:00:00.000Z', 'valor': 726.15},\n",
       " {'fecha': '2019-10-23T03:00:00.000Z', 'valor': 726.24},\n",
       " {'fecha': '2019-10-22T03:00:00.000Z', 'valor': 723.52},\n",
       " {'fecha': '2019-10-21T03:00:00.000Z', 'valor': 709.71},\n",
       " {'fecha': '2019-10-18T03:00:00.000Z', 'valor': 713.23},\n",
       " {'fecha': '2019-10-17T03:00:00.000Z', 'valor': 718.69},\n",
       " {'fecha': '2019-10-16T03:00:00.000Z', 'valor': 715.48},\n",
       " {'fecha': '2019-10-15T03:00:00.000Z', 'valor': 712.04},\n",
       " {'fecha': '2019-10-14T03:00:00.000Z', 'valor': 712.98},\n",
       " {'fecha': '2019-10-11T03:00:00.000Z', 'valor': 720.61},\n",
       " {'fecha': '2019-10-10T03:00:00.000Z', 'valor': 724.27},\n",
       " {'fecha': '2019-10-09T03:00:00.000Z', 'valor': 722.28},\n",
       " {'fecha': '2019-10-08T03:00:00.000Z', 'valor': 717.05},\n",
       " {'fecha': '2019-10-07T03:00:00.000Z', 'valor': 715.53},\n",
       " {'fecha': '2019-10-04T03:00:00.000Z', 'valor': 719.53},\n",
       " {'fecha': '2019-10-03T03:00:00.000Z', 'valor': 727.8},\n",
       " {'fecha': '2019-10-02T03:00:00.000Z', 'valor': 729.38},\n",
       " {'fecha': '2019-10-01T03:00:00.000Z', 'valor': 728.21},\n",
       " {'fecha': '2019-09-30T03:00:00.000Z', 'valor': 725.68},\n",
       " {'fecha': '2019-09-27T03:00:00.000Z', 'valor': 726.17},\n",
       " {'fecha': '2019-09-26T03:00:00.000Z', 'valor': 727.08},\n",
       " {'fecha': '2019-09-25T03:00:00.000Z', 'valor': 721.92},\n",
       " {'fecha': '2019-09-24T03:00:00.000Z', 'valor': 722.17},\n",
       " {'fecha': '2019-09-23T03:00:00.000Z', 'valor': 715.24},\n",
       " {'fecha': '2019-09-17T03:00:00.000Z', 'valor': 709.81},\n",
       " {'fecha': '2019-09-16T03:00:00.000Z', 'valor': 707.07},\n",
       " {'fecha': '2019-09-13T03:00:00.000Z', 'valor': 711.29},\n",
       " {'fecha': '2019-09-12T03:00:00.000Z', 'valor': 714.39},\n",
       " {'fecha': '2019-09-11T03:00:00.000Z', 'valor': 714.77},\n",
       " {'fecha': '2019-09-10T03:00:00.000Z', 'valor': 713.72},\n",
       " {'fecha': '2019-09-09T03:00:00.000Z', 'valor': 711.22},\n",
       " {'fecha': '2019-09-06T04:00:00.000Z', 'valor': 717.52},\n",
       " {'fecha': '2019-09-05T04:00:00.000Z', 'valor': 723.3},\n",
       " {'fecha': '2019-09-04T04:00:00.000Z', 'valor': 725.69},\n",
       " {'fecha': '2019-09-03T04:00:00.000Z', 'valor': 724.72},\n",
       " {'fecha': '2019-09-02T04:00:00.000Z', 'valor': 720.2},\n",
       " {'fecha': '2019-08-30T04:00:00.000Z', 'valor': 720.65},\n",
       " {'fecha': '2019-08-29T04:00:00.000Z', 'valor': 724.2},\n",
       " {'fecha': '2019-08-28T04:00:00.000Z', 'valor': 721.55},\n",
       " {'fecha': '2019-08-27T04:00:00.000Z', 'valor': 718.75},\n",
       " {'fecha': '2019-08-26T04:00:00.000Z', 'valor': 716.4},\n",
       " {'fecha': '2019-08-23T04:00:00.000Z', 'valor': 713.22},\n",
       " {'fecha': '2019-08-22T04:00:00.000Z', 'valor': 709.52},\n",
       " {'fecha': '2019-08-21T04:00:00.000Z', 'valor': 710.63},\n",
       " {'fecha': '2019-08-20T04:00:00.000Z', 'valor': 711.94},\n",
       " {'fecha': '2019-08-19T04:00:00.000Z', 'valor': 709.26},\n",
       " {'fecha': '2019-08-16T04:00:00.000Z', 'valor': 710.14},\n",
       " {'fecha': '2019-08-14T04:00:00.000Z', 'valor': 708.37},\n",
       " {'fecha': '2019-08-13T04:00:00.000Z', 'valor': 716.69},\n",
       " {'fecha': '2019-08-12T04:00:00.000Z', 'valor': 712.04},\n",
       " {'fecha': '2019-08-09T04:00:00.000Z', 'valor': 710.98},\n",
       " {'fecha': '2019-08-08T04:00:00.000Z', 'valor': 718.55},\n",
       " {'fecha': '2019-08-07T04:00:00.000Z', 'valor': 716.35},\n",
       " {'fecha': '2019-08-06T04:00:00.000Z', 'valor': 721.7},\n",
       " {'fecha': '2019-08-05T04:00:00.000Z', 'valor': 711.13},\n",
       " {'fecha': '2019-08-02T04:00:00.000Z', 'valor': 704.88},\n",
       " {'fecha': '2019-08-01T04:00:00.000Z', 'valor': 700.82},\n",
       " {'fecha': '2019-07-31T04:00:00.000Z', 'valor': 699.98},\n",
       " {'fecha': '2019-07-30T04:00:00.000Z', 'valor': 697.22},\n",
       " {'fecha': '2019-07-29T04:00:00.000Z', 'valor': 696.62},\n",
       " {'fecha': '2019-07-26T04:00:00.000Z', 'valor': 694.16},\n",
       " {'fecha': '2019-07-25T04:00:00.000Z', 'valor': 691.36},\n",
       " {'fecha': '2019-07-24T04:00:00.000Z', 'valor': 691.57},\n",
       " {'fecha': '2019-07-23T04:00:00.000Z', 'valor': 688.28},\n",
       " {'fecha': '2019-07-22T04:00:00.000Z', 'valor': 685.81},\n",
       " {'fecha': '2019-07-19T04:00:00.000Z', 'valor': 683.27},\n",
       " {'fecha': '2019-07-18T04:00:00.000Z', 'valor': 681.69},\n",
       " {'fecha': '2019-07-17T04:00:00.000Z', 'valor': 679.48},\n",
       " {'fecha': '2019-07-15T04:00:00.000Z', 'valor': 681.07},\n",
       " {'fecha': '2019-07-12T04:00:00.000Z', 'valor': 683.38},\n",
       " {'fecha': '2019-07-11T04:00:00.000Z', 'valor': 685.4},\n",
       " {'fecha': '2019-07-10T04:00:00.000Z', 'valor': 688.88},\n",
       " {'fecha': '2019-07-09T04:00:00.000Z', 'valor': 685.83},\n",
       " {'fecha': '2019-07-08T04:00:00.000Z', 'valor': 683.12},\n",
       " {'fecha': '2019-07-05T04:00:00.000Z', 'valor': 677.64},\n",
       " {'fecha': '2019-07-04T04:00:00.000Z', 'valor': 680.48},\n",
       " {'fecha': '2019-07-03T04:00:00.000Z', 'valor': 681.3},\n",
       " {'fecha': '2019-07-02T04:00:00.000Z', 'valor': 677.62},\n",
       " {'fecha': '2019-07-01T04:00:00.000Z', 'valor': 679.15},\n",
       " {'fecha': '2019-06-28T04:00:00.000Z', 'valor': 679.86},\n",
       " {'fecha': '2019-06-27T04:00:00.000Z', 'valor': 680.06},\n",
       " {'fecha': '2019-06-26T04:00:00.000Z', 'valor': 678.32},\n",
       " {'fecha': '2019-06-25T04:00:00.000Z', 'valor': 682.31},\n",
       " {'fecha': '2019-06-24T04:00:00.000Z', 'valor': 683.41},\n",
       " {'fecha': '2019-06-21T04:00:00.000Z', 'valor': 684.19},\n",
       " {'fecha': '2019-06-20T04:00:00.000Z', 'valor': 693.99},\n",
       " {'fecha': '2019-06-19T04:00:00.000Z', 'valor': 696.81},\n",
       " {'fecha': '2019-06-18T04:00:00.000Z', 'valor': 699.52},\n",
       " {'fecha': '2019-06-17T04:00:00.000Z', 'valor': 698.72},\n",
       " {'fecha': '2019-06-14T04:00:00.000Z', 'valor': 696.25},\n",
       " {'fecha': '2019-06-13T04:00:00.000Z', 'valor': 694.89},\n",
       " {'fecha': '2019-06-12T04:00:00.000Z', 'valor': 693.6},\n",
       " {'fecha': '2019-06-11T04:00:00.000Z', 'valor': 697.34},\n",
       " {'fecha': '2019-06-10T04:00:00.000Z', 'valor': 692.28},\n",
       " {'fecha': '2019-06-07T04:00:00.000Z', 'valor': 692.21},\n",
       " {'fecha': '2019-06-06T04:00:00.000Z', 'valor': 693.25},\n",
       " {'fecha': '2019-06-05T04:00:00.000Z', 'valor': 696.78},\n",
       " {'fecha': '2019-06-04T04:00:00.000Z', 'valor': 704.59},\n",
       " {'fecha': '2019-06-03T04:00:00.000Z', 'valor': 709.8},\n",
       " {'fecha': '2019-05-31T04:00:00.000Z', 'valor': 707.86},\n",
       " {'fecha': '2019-05-30T04:00:00.000Z', 'valor': 708.2},\n",
       " {'fecha': '2019-05-29T04:00:00.000Z', 'valor': 703.48},\n",
       " {'fecha': '2019-05-28T04:00:00.000Z', 'valor': 696.46},\n",
       " {'fecha': '2019-05-27T04:00:00.000Z', 'valor': 694.84},\n",
       " {'fecha': '2019-05-24T04:00:00.000Z', 'valor': 698.03},\n",
       " {'fecha': '2019-05-23T04:00:00.000Z', 'valor': 696.7},\n",
       " {'fecha': '2019-05-22T04:00:00.000Z', 'valor': 697.23},\n",
       " {'fecha': '2019-05-20T04:00:00.000Z', 'valor': 696.61},\n",
       " {'fecha': '2019-05-17T04:00:00.000Z', 'valor': 692.79},\n",
       " {'fecha': '2019-05-16T04:00:00.000Z', 'valor': 692.62},\n",
       " {'fecha': '2019-05-15T04:00:00.000Z', 'valor': 692.33},\n",
       " {'fecha': '2019-05-14T04:00:00.000Z', 'valor': 693.04},\n",
       " {'fecha': '2019-05-13T04:00:00.000Z', 'valor': 685.67},\n",
       " {'fecha': '2019-05-10T04:00:00.000Z', 'valor': 686.43},\n",
       " {'fecha': '2019-05-09T04:00:00.000Z', 'valor': 684.51},\n",
       " {'fecha': '2019-05-08T04:00:00.000Z', 'valor': 683.49},\n",
       " {'fecha': '2019-05-07T04:00:00.000Z', 'valor': 681.09},\n",
       " {'fecha': '2019-05-06T04:00:00.000Z', 'valor': 678.68},\n",
       " {'fecha': '2019-05-03T04:00:00.000Z', 'valor': 683.31},\n",
       " {'fecha': '2019-05-02T04:00:00.000Z', 'valor': 678.71},\n",
       " {'fecha': '2019-04-30T04:00:00.000Z', 'valor': 677.67},\n",
       " {'fecha': '2019-04-29T04:00:00.000Z', 'valor': 673.86},\n",
       " {'fecha': '2019-04-26T04:00:00.000Z', 'valor': 676.21},\n",
       " {'fecha': '2019-04-25T04:00:00.000Z', 'valor': 672.83},\n",
       " {'fecha': '2019-04-24T04:00:00.000Z', 'valor': 668.19},\n",
       " {'fecha': '2019-04-23T04:00:00.000Z', 'valor': 663.91},\n",
       " {'fecha': '2019-04-22T04:00:00.000Z', 'valor': 662.27},\n",
       " {'fecha': '2019-04-18T04:00:00.000Z', 'valor': 660.48},\n",
       " {'fecha': '2019-04-17T04:00:00.000Z', 'valor': 663.98},\n",
       " {'fecha': '2019-04-16T04:00:00.000Z', 'valor': 662.86},\n",
       " {'fecha': '2019-04-15T04:00:00.000Z', 'valor': 660.67},\n",
       " {'fecha': '2019-04-12T04:00:00.000Z', 'valor': 664.19},\n",
       " {'fecha': '2019-04-11T04:00:00.000Z', 'valor': 662.92},\n",
       " {'fecha': '2019-04-10T04:00:00.000Z', 'valor': 663.15},\n",
       " {'fecha': '2019-04-09T04:00:00.000Z', 'valor': 663.01},\n",
       " {'fecha': '2019-04-08T04:00:00.000Z', 'valor': 664.17},\n",
       " {'fecha': '2019-04-05T03:00:00.000Z', 'valor': 666.32},\n",
       " {'fecha': '2019-04-04T03:00:00.000Z', 'valor': 667.55},\n",
       " {'fecha': '2019-04-03T03:00:00.000Z', 'valor': 670.05},\n",
       " {'fecha': '2019-04-02T03:00:00.000Z', 'valor': 672.56},\n",
       " {'fecha': '2019-04-01T03:00:00.000Z', 'valor': 678.53},\n",
       " {'fecha': '2019-03-29T03:00:00.000Z', 'valor': 681.09},\n",
       " {'fecha': '2019-03-28T03:00:00.000Z', 'valor': 683.73},\n",
       " {'fecha': '2019-03-27T03:00:00.000Z', 'valor': 679.02},\n",
       " {'fecha': '2019-03-26T03:00:00.000Z', 'valor': 679.08},\n",
       " {'fecha': '2019-03-25T03:00:00.000Z', 'valor': 676.6},\n",
       " {'fecha': '2019-03-22T03:00:00.000Z', 'valor': 665.12},\n",
       " {'fecha': '2019-03-21T03:00:00.000Z', 'valor': 666.13},\n",
       " {'fecha': '2019-03-20T03:00:00.000Z', 'valor': 664.78},\n",
       " {'fecha': '2019-03-19T03:00:00.000Z', 'valor': 667.21},\n",
       " {'fecha': '2019-03-18T03:00:00.000Z', 'valor': 669.39},\n",
       " {'fecha': '2019-03-15T03:00:00.000Z', 'valor': 670.62},\n",
       " {'fecha': '2019-03-14T03:00:00.000Z', 'valor': 665.68},\n",
       " {'fecha': '2019-03-13T03:00:00.000Z', 'valor': 667.09},\n",
       " {'fecha': '2019-03-12T03:00:00.000Z', 'valor': 669.37},\n",
       " {'fecha': '2019-03-11T03:00:00.000Z', 'valor': 670.83},\n",
       " {'fecha': '2019-03-08T03:00:00.000Z', 'valor': 662.19},\n",
       " {'fecha': '2019-03-07T03:00:00.000Z', 'valor': 658.4},\n",
       " {'fecha': '2019-03-06T03:00:00.000Z', 'valor': 657.49},\n",
       " {'fecha': '2019-03-05T03:00:00.000Z', 'valor': 659.07},\n",
       " {'fecha': '2019-03-04T03:00:00.000Z', 'valor': 656.57},\n",
       " {'fecha': '2019-03-01T03:00:00.000Z', 'valor': 651.79},\n",
       " {'fecha': '2019-02-28T03:00:00.000Z', 'valor': 649.92},\n",
       " {'fecha': '2019-02-27T03:00:00.000Z', 'valor': 649.8},\n",
       " {'fecha': '2019-02-26T03:00:00.000Z', 'valor': 649.22},\n",
       " {'fecha': '2019-02-25T03:00:00.000Z', 'valor': 651.36},\n",
       " {'fecha': '2019-02-22T03:00:00.000Z', 'valor': 654.33},\n",
       " {'fecha': '2019-02-21T03:00:00.000Z', 'valor': 654.52},\n",
       " {'fecha': '2019-02-20T03:00:00.000Z', 'valor': 658.75},\n",
       " {'fecha': '2019-02-19T03:00:00.000Z', 'valor': 660.82},\n",
       " {'fecha': '2019-02-18T03:00:00.000Z', 'valor': 663.98},\n",
       " {'fecha': '2019-02-15T03:00:00.000Z', 'valor': 665.9},\n",
       " {'fecha': '2019-02-14T03:00:00.000Z', 'valor': 661.6},\n",
       " {'fecha': '2019-02-13T03:00:00.000Z', 'valor': 660.49},\n",
       " {'fecha': '2019-02-12T03:00:00.000Z', 'valor': 660.82},\n",
       " {'fecha': '2019-02-11T03:00:00.000Z', 'valor': 656.46},\n",
       " {'fecha': '2019-02-08T03:00:00.000Z', 'valor': 654.44},\n",
       " {'fecha': '2019-02-07T03:00:00.000Z', 'valor': 653.9},\n",
       " {'fecha': '2019-02-06T03:00:00.000Z', 'valor': 652.78},\n",
       " {'fecha': '2019-02-05T03:00:00.000Z', 'valor': 653.8},\n",
       " {'fecha': '2019-02-04T03:00:00.000Z', 'valor': 655.39},\n",
       " {'fecha': '2019-02-01T03:00:00.000Z', 'valor': 657.81},\n",
       " {'fecha': '2019-01-31T03:00:00.000Z', 'valor': 666.76},\n",
       " {'fecha': '2019-01-30T03:00:00.000Z', 'valor': 669.6},\n",
       " {'fecha': '2019-01-29T03:00:00.000Z', 'valor': 671.29},\n",
       " {'fecha': '2019-01-28T03:00:00.000Z', 'valor': 667.04},\n",
       " {'fecha': '2019-01-25T03:00:00.000Z', 'valor': 672.14},\n",
       " {'fecha': '2019-01-24T03:00:00.000Z', 'valor': 672.41},\n",
       " {'fecha': '2019-01-23T03:00:00.000Z', 'valor': 672.26},\n",
       " {'fecha': '2019-01-22T03:00:00.000Z', 'valor': 672.42},\n",
       " {'fecha': '2019-01-21T03:00:00.000Z', 'valor': 670.1},\n",
       " {'fecha': '2019-01-18T03:00:00.000Z', 'valor': 671.37},\n",
       " {'fecha': '2019-01-17T03:00:00.000Z', 'valor': 672.73},\n",
       " {'fecha': '2019-01-16T03:00:00.000Z', 'valor': 673.76},\n",
       " {'fecha': '2019-01-15T03:00:00.000Z', 'valor': 674.95},\n",
       " {'fecha': '2019-01-14T03:00:00.000Z', 'valor': 675.15},\n",
       " {'fecha': '2019-01-11T03:00:00.000Z', 'valor': 677.58},\n",
       " {'fecha': '2019-01-10T03:00:00.000Z', 'valor': 678.09},\n",
       " {'fecha': '2019-01-09T03:00:00.000Z', 'valor': 680.1},\n",
       " {'fecha': '2019-01-08T03:00:00.000Z', 'valor': 679.69},\n",
       " {'fecha': '2019-01-07T03:00:00.000Z', 'valor': 688.42},\n",
       " {'fecha': '2019-01-04T03:00:00.000Z', 'valor': 697.64},\n",
       " {'fecha': '2019-01-03T03:00:00.000Z', 'valor': 697.09},\n",
       " {'fecha': '2019-01-02T03:00:00.000Z', 'valor': 694.77}]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#extrae solo los datos contenidos en \"serie\" de cada indicador y año\n",
    "\n",
    "data_dolar_2019 = dolar_2019.json()['serie']\n",
    "data_dolar_2020 = dolar_2020.json()['serie']\n",
    "data_dolar_2021 = dolar_2021.json()['serie']\n",
    "\n",
    "#data = json.loads(dolar_2019)\n",
    "#df = pd.json_normalize(data['dolar'])\n",
    "\n",
    "\n",
    "data_tasa_desempleo_2019 = tasa_desempleo_2019.json()['serie'] \n",
    "data_tasa_desempleo_2020 = tasa_desempleo_2020.json()['serie']\n",
    "data_tasa_desempleo_2021 = tasa_desempleo_2021.json()['serie']\n",
    "\n",
    "data_libra_cobre_2019 = libra_cobre_2019.json()['serie']\n",
    "data_libra_cobre_2020 = libra_cobre_2020.json()['serie']\n",
    "data_libra_cobre_2021 = libra_cobre_2021.json()['serie']\n",
    "\n",
    "data_ipc_2019 = ipc_2019.json()['serie']\n",
    "data_ipc_2020 = ipc_2020.json()['serie']\n",
    "data_ipc_2021 = ipc_2021.json()['serie']\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Terremotos alrededor del mundo (USGS)\n",
    "\n",
    "El Servicio Geológico de los Estados Unidos o USGS por sus siglas en inglés (United States Geological Survey), es una agencia científica del gobierno federal de los Estados Unidos, dedicada al estudio del medio ambiente y ecosistemas, recursos naturales, amenazas del cambio climático y peligros naturales que pueden afectar a las personas. \n",
    "\n",
    "El USGS es una institución líder a nivel mundial en sismología, y a través del programa *Earthquake Hazards* (https://earthquake.usgs.gov/) se ocupa de monitorear y reportar eventos sísmicos, evaluar la amenaza e impacto de terremotos, e investigar sobre sus causas y efectos. Dentro de sus múltiples herramientas y plataformas de información, cuenta con una API que entrega información en tiempo real de los sismos registrados alrededor del mundo:\n",
    "\n",
    "https://earthquake.usgs.gov/fdsnws/event/1/?ref=springboard\n",
    "\n",
    "En este ejericio, ud. extraerá data del USGS para analizar y visualizar la ocurrencia de terremotos de gran magnitud alrededor del mundo en las últimas dos décadas.\n",
    "\n",
    "**2.1.** Usando la API del USGS, obtenga el listado de sismos de **magnitud mayor a 7** ocurridos en todo el mundo, desde el 1 de enero de 2000 a la fecha. Puede elegir el formato de respuesta de su preferencia. Consdiere que el formato GeoJSON es similar a JSON, sólo que en uno de sus campos incluye información de coordenadas geográficas.\n",
    "\n",
    "**2.2.** Convierta los datos extraídos en un DataFrame con la siguiente estructura:\n",
    "\n",
    "<div>\n",
    "<img src=\"figures/fig_2.png\" width=\"600\"/>\n",
    "</div>\n",
    "\n",
    "**2.3.** Utilizando los datos de latitud y longitud de cada terremoto, convierta su DataFrame en un GeoDataFrame con geometrías tipo 'POINT'.\n",
    "\n",
    "**2.4.** Descargue un conjunto de datos vectorial con la geometría (polígonos) de los continentes y países del mundo. Por ejemplo, puede encontrar estos datos en el portal del Banco Mundial:\n",
    "\n",
    "https://datacatalog.worldbank.org/dataset/world-bank-official-boundaries\n",
    "\n",
    "Elija cualquiera de los datasets disponibles (siempre que le sirva para generar un mapa del mundo), e implemente su **descarga y lectura directamente desde su código de Python**.  \n",
    "\n",
    "**2.5.** Utilizando los datos de sismos y la capa vectorial descargada, genere un mapa del mundo que incluya: polígonos de continentes y/o países del mundo, y la ubicación y magnitud de los sismos registrados en la base de datos del USGS. Grafique las magnitudes como escala de colores."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Webscrapping\n",
    "\n",
    "Suponga que ud. ha decidido crear un emprendimiento comercial vendiendo tablets, ya que actualmente que son un producto muy demandado para el teletrabajo. Para ello, necesita hacer un estudio de mercado y analizar los precios de venta de la competencia.\n",
    "\n",
    "En este ejercicio, ud. hará un scrapper de la página de la tienda PCFactory, específicamente del catálogo de tablets ubicado en la siguiente URL: https://www.pcfactory.cl/tablets?categoria=967&papa=636.\n",
    "\n",
    "**3.1** Analice cuidadosamente el código HTML de la página y determine: ¿qué tag o atributo permite identificar el listado de productos con sus respectivas características (nombre, marca, precio)?\n",
    "\n",
    "**3.2** Obtenga el código web de la página y extraiga la información de interés, de manera de llegar a un DataFrame con la siguiente estructura:\n",
    "\n",
    "<div>\n",
    "<img src=\"figures/fig_3.png\" width=\"500\"/>\n",
    "</div>\n",
    "\n",
    "\n",
    "Note que existen dos páginas de resultados, el objetivo es extraer los datos de ambas páginas."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
